{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.string.split.js","webpack:///./node_modules/howler/dist/howler.js","webpack:///./src/views/patee/null.vue?5cfd","webpack:///./node_modules/@babel/runtime/helpers/arrayWithHoles/_index.mjs","webpack:///./node_modules/@babel/runtime/helpers/iterableToArrayLimit/_index.mjs","webpack:///./node_modules/@babel/runtime/helpers/nonIterableRest/_index.mjs","webpack:///./node_modules/@babel/runtime/helpers/slicedToArray/_index.mjs","webpack:///./src/components/PateeCounter.vue?aa28","webpack:///./src/factories/useAudio.ts","webpack:///./src/components/PateeCounter.vue","webpack:///./src/components/PateeCounter.vue?fb92","webpack:///./src/components/PateeCounter.vue?af4a","webpack:///./src/views/patee/.vue","webpack:///./src/views/patee/null.vue?50e4","webpack:///./src/views/patee/null.vue"],"names":["fixRegExpWellKnownSymbolLogic","isRegExp","anObject","requireObjectCoercible","speciesConstructor","advanceStringIndex","toLength","callRegExpExec","regexpExec","fails","arrayPush","push","min","Math","MAX_UINT32","SUPPORTS_Y","RegExp","SPLIT","nativeSplit","maybeCallNative","internalSplit","split","length","separator","limit","string","String","this","lim","undefined","call","match","lastIndex","lastLength","output","flags","ignoreCase","multiline","unicode","sticky","lastLastIndex","separatorCopy","source","slice","index","apply","test","O","splitter","regexp","res","done","value","rx","S","C","unicodeMatching","p","q","A","e","z","i","HowlerGlobal","init","prototype","self","Howler","_counter","_html5AudioPool","html5PoolSize","_codecs","_howls","_muted","_volume","_canPlayEvent","_navigator","window","navigator","masterGain","noAudio","usingWebAudio","autoSuspend","ctx","autoUnlock","_setup","volume","vol","parseFloat","setupAudioContext","gain","setValueAtTime","currentTime","_webAudio","ids","_getSoundIds","j","sound","_soundById","_node","mute","muted","stop","unload","close","codecs","ext","replace","state","_autoSuspend","Audio","oncanplaythrough","_setupCodecs","audioTest","err","canPlayType","mpegTest","checkOpera","userAgent","isOldOpera","parseInt","mp3","mpeg","opus","ogg","oga","wav","aac","caf","m4a","m4b","mp4","weba","webm","dolby","flac","_unlockAudio","_audioUnlocked","_mobileUnloaded","sampleRate","_scratchBuffer","createBuffer","unlock","audioNode","_unlocked","_releaseHtml5Audio","load","_autoResume","createBufferSource","buffer","connect","destination","start","noteOn","resume","onended","disconnect","document","removeEventListener","_emit","addEventListener","_obtainHtml5Audio","pop","testPlay","play","Promise","then","catch","console","warn","audio","suspend","_sounds","_paused","_suspendTimer","clearTimeout","setTimeout","handleSuspension","_resumeAfterSuspend","Howl","o","src","error","_autoplay","autoplay","_format","format","_html5","html5","_loop","loop","_pool","pool","_preload","preload","_rate","rate","_sprite","sprite","_src","_xhr","method","xhr","headers","withCredentials","_duration","_state","_endTimers","_queue","_playLock","_onend","onend","fn","_onfade","onfade","_onload","onload","_onloaderror","onloaderror","_onplayerror","onplayerror","_onpause","onpause","_onplay","onplay","_onstop","onstop","_onmute","onmute","_onvolume","onvolume","_onrate","onrate","_onseek","onseek","_onunlock","onunlock","_onresume","event","action","url","str","exec","toLowerCase","location","protocol","Sound","loadBuffer","internal","id","num","_ended","_id","_inactiveSound","soundId","_loadQueue","seek","max","_seek","duration","timeout","abs","setParams","_start","_stop","node","playWebAudio","_refreshBuffer","_playStart","bufferSource","noteGrainOn","Infinity","bind","once","_clearTimer","playHtml5","playbackRate","paused","loadedNoReadyState","ejecta","readyState","isCocoonJS","listener","pause","_rateSeek","_stopFade","noteOff","_cleanBuffer","isNaN","arguments","_clearSound","_interval","args","indexOf","fade","from","to","len","end","linearRampToValueAtTime","_startFadeInterval","isGroup","diff","steps","stepLen","lastTick","Date","now","_fadeTo","setInterval","tick","round","clearInterval","cancelScheduledValues","loopStart","loopEnd","playing","realTime","rateSeek","seekAndEmit","emitSeek","sounds","_errorFn","_loadFn","_endFn","splice","remCache","cache","on","events","off","isId","keys","Object","Array","isArray","msg","task","shift","ended","_drain","reset","cnt","_panner","isIOS","vendor","checkIE","howl","_parent","parent","create","createGain","createGainNode","_errorListener","_loadListener","_endListener","code","ceil","__default","loadSound","data","atob","dataView","Uint8Array","charCodeAt","decodeAudioData","XMLHttpRequest","open","responseType","forEach","key","setRequestHeader","status","response","onerror","safeXhrSend","send","arraybuffer","success","AudioContext","webkitAudioContext","iOS","platform","appVersion","version","safari","exports","global","_pos","_orientation","stereo","pan","pos","x","y","positionX","setTargetAtTime","positionY","positionZ","setPosition","orientation","xUp","yUp","zUp","or","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","_super","_stereo","_pannerAttr","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","panningModel","refDistance","rolloffFactor","_onstereo","onstereo","_onpos","onpos","_onorientation","onorientation","pannerType","createStereoPanner","setupPanner","orientationX","orientationY","orientationZ","pannerAttr","_coneInnerAngle","_coneOuterAngle","_coneOuterGain","_distanceModel","_maxDistance","_refDistance","_rolloffFactor","_panningModel","pa","panner","type","createPanner","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","currentPateeMeaning","title","scopedSlots","_u","directives","name","rawName","finishHandler","class","isFinishedAlready","proxy","_v","_s","meaning","en2mmNum","currentPateeStep","countLoop","staticRenderFns","_arrayWithHoles","arr","_iterableToArrayLimit","Symbol","iterator","_arr","_n","_d","_e","_i","next","_nonIterableRest","TypeError","_slicedToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","loopCount","get","size","clickHandler","totalCountLoop","tallyCount","useAudio","audioPath","isProd","audioUrls","clickSound","dev","prod","finishSound","props","Number","default","pateeLength","methods","setup","emit","finishClickSound","inc","count","set","component","components","BaseHeader","BaseButton","BaseIcon","PateeCounter","_props","root","currentPatee","$route","params","patee","currentStep","currentDay","pateeData","pateeProgressStorage","usePateeProgressStorage","isInclude","stepIdx","filter","s","day","toString","words","w","add"],"mappings":"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","file":"js/[patee-id].0057b548.js","sourcesContent":["'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar isRegExp = require('../internals/is-regexp');\nvar anObject = require('../internals/an-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar speciesConstructor = require('../internals/species-constructor');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar toLength = require('../internals/to-length');\nvar callRegExpExec = require('../internals/regexp-exec-abstract');\nvar regexpExec = require('../internals/regexp-exec');\nvar fails = require('../internals/fails');\n\nvar arrayPush = [].push;\nvar min = Math.min;\nvar MAX_UINT32 = 0xFFFFFFFF;\n\n// babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError\nvar SUPPORTS_Y = !fails(function () { return !RegExp(MAX_UINT32, 'y'); });\n\n// @@split logic\nfixRegExpWellKnownSymbolLogic('split', 2, function (SPLIT, nativeSplit, maybeCallNative) {\n  var internalSplit;\n  if (\n    'abbc'.split(/(b)*/)[1] == 'c' ||\n    // eslint-disable-next-line regexp/no-empty-group -- required for testing\n    'test'.split(/(?:)/, -1).length != 4 ||\n    'ab'.split(/(?:ab)*/).length != 2 ||\n    '.'.split(/(.?)(.?)/).length != 4 ||\n    // eslint-disable-next-line regexp/no-assertion-capturing-group, regexp/no-empty-group -- required for testing\n    '.'.split(/()()/).length > 1 ||\n    ''.split(/.?/).length\n  ) {\n    // based on es5-shim implementation, need to rework it\n    internalSplit = function (separator, limit) {\n      var string = String(requireObjectCoercible(this));\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (separator === undefined) return [string];\n      // If `separator` is not a regex, use native split\n      if (!isRegExp(separator)) {\n        return nativeSplit.call(string, separator, lim);\n      }\n      var output = [];\n      var flags = (separator.ignoreCase ? 'i' : '') +\n                  (separator.multiline ? 'm' : '') +\n                  (separator.unicode ? 'u' : '') +\n                  (separator.sticky ? 'y' : '');\n      var lastLastIndex = 0;\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      var separatorCopy = new RegExp(separator.source, flags + 'g');\n      var match, lastIndex, lastLength;\n      while (match = regexpExec.call(separatorCopy, string)) {\n        lastIndex = separatorCopy.lastIndex;\n        if (lastIndex > lastLastIndex) {\n          output.push(string.slice(lastLastIndex, match.index));\n          if (match.length > 1 && match.index < string.length) arrayPush.apply(output, match.slice(1));\n          lastLength = match[0].length;\n          lastLastIndex = lastIndex;\n          if (output.length >= lim) break;\n        }\n        if (separatorCopy.lastIndex === match.index) separatorCopy.lastIndex++; // Avoid an infinite loop\n      }\n      if (lastLastIndex === string.length) {\n        if (lastLength || !separatorCopy.test('')) output.push('');\n      } else output.push(string.slice(lastLastIndex));\n      return output.length > lim ? output.slice(0, lim) : output;\n    };\n  // Chakra, V8\n  } else if ('0'.split(undefined, 0).length) {\n    internalSplit = function (separator, limit) {\n      return separator === undefined && limit === 0 ? [] : nativeSplit.call(this, separator, limit);\n    };\n  } else internalSplit = nativeSplit;\n\n  return [\n    // `String.prototype.split` method\n    // https://tc39.es/ecma262/#sec-string.prototype.split\n    function split(separator, limit) {\n      var O = requireObjectCoercible(this);\n      var splitter = separator == undefined ? undefined : separator[SPLIT];\n      return splitter !== undefined\n        ? splitter.call(separator, O, limit)\n        : internalSplit.call(String(O), separator, limit);\n    },\n    // `RegExp.prototype[@@split]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@split\n    //\n    // NOTE: This cannot be properly polyfilled in engines that don't support\n    // the 'y' flag.\n    function (regexp, limit) {\n      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== nativeSplit);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n      var C = speciesConstructor(rx, RegExp);\n\n      var unicodeMatching = rx.unicode;\n      var flags = (rx.ignoreCase ? 'i' : '') +\n                  (rx.multiline ? 'm' : '') +\n                  (rx.unicode ? 'u' : '') +\n                  (SUPPORTS_Y ? 'y' : 'g');\n\n      // ^(? + rx + ) is needed, in combination with some S slicing, to\n      // simulate the 'y' flag.\n      var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];\n      var p = 0;\n      var q = 0;\n      var A = [];\n      while (q < S.length) {\n        splitter.lastIndex = SUPPORTS_Y ? q : 0;\n        var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));\n        var e;\n        if (\n          z === null ||\n          (e = min(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p\n        ) {\n          q = advanceStringIndex(S, q, unicodeMatching);\n        } else {\n          A.push(S.slice(p, q));\n          if (A.length === lim) return A;\n          for (var i = 1; i <= z.length - 1; i++) {\n            A.push(z[i]);\n            if (A.length === lim) return A;\n          }\n          q = p = e;\n        }\n      }\n      A.push(S.slice(p));\n      return A;\n    }\n  ];\n}, !SUPPORTS_Y);\n","/*!\n *  howler.js v2.2.1\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var checkOpera = self._navigator && self._navigator.userAgent.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        webm: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n\n          var listener = function() {\n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return self;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            self._emit('seek', id);\n\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof global !== 'undefined') {\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.1\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n          panner.panningModel = pa.panningModel;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"h-screen grid grid-rows-4 place-items-center\"},[_c('base-header',{attrs:{\"title\":_vm.currentPateeMeaning.title,\"sticky\":\"\"},scopedSlots:_vm._u([{key:\"postfix\",fn:function(){return [_c('base-button',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],attrs:{\"circle\":\"\"},on:{\"click\":_vm.finishHandler}},[_c('base-icon',{class:{ 'text-red-500': _vm.isFinishedAlready },attrs:{\"icon-name\":\"done_all\",\"size\":\"lg\"}})],1)]},proxy:true}])}),_c('div',{staticClass:\"row-span-1\"}),_c('div',{staticClass:\"row-span-1 px-10 text-center\"},[_c('h1',{staticClass:\"text-xl font-bold\"},[_vm._v(\"အဓိပ္ပါယ်\")]),_c('p',{staticClass:\"my-4 font-base\"},[_vm._v(_vm._s(_vm.currentPateeMeaning.meaning))]),_c('p',{staticClass:\"font-sm font-bold\"},[_vm._v(\" ပုတီးစိပ်ရမည့်အပတ်စဉ် - \"+_vm._s(_vm.en2mmNum(_vm.currentPateeStep.countLoop))+\"ပတ် \")])]),_c('patee-counter',{staticClass:\"row-span-2\",attrs:{\"total-count-loop\":_vm.currentPateeStep.countLoop,\"size\":\"w-40 h-40 rounded-full bg-red-600 text-white text-3xl\"},on:{\"done\":_vm.finishHandler}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"../arrayWithHoles/_index.mjs\";\nimport iterableToArrayLimit from \"../iterableToArrayLimit/_index.mjs\";\nimport unsupportedIterableToArray from \"../unsupportedIterableToArray/_index.mjs\";\nimport nonIterableRest from \"../nonIterableRest/_index.mjs\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"flex flex-col justify-center items-center\"},[_c('p',{staticClass:\"my-4 text-center text-red-700 font-bold\"},[_vm._v(\" အပတ်စဉ် \"+_vm._s(_vm.en2mmNum(_vm.loopCount.get()))+\" \")]),_c('div',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],staticClass:\"select-none cursor-pointer rounded-lg grid place-items-center\",class:_vm.size,on:{\"click\":_vm.clickHandler}},[_vm._v(\" \"+_vm._s(_vm.loopCount.get() === _vm.totalCountLoop ? 'ပြီးပါပြီ' : _vm.en2mmNum(_vm.tallyCount.get()))+\" \")])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { Howl } from 'howler';\n/**\n * function to access and play web audio\n * @param audioPath string, audio file path for playing\n * @returns audio, play\n */\nexport default function useAudio(audioPath: string) {\n  const audio = new Howl({ src: [audioPath], preload: true, html5: true });\n\n  function play() {\n    if (!audio) return;\n    audio.play();\n  }\n\n  function stop() {\n    if (!audio) return;\n    audio.stop();\n  }\n\n  return {\n    audio,\n    play,\n    stop,\n  };\n}\n","\nimport { defineComponent, watch } from '@vue/composition-api';\nimport { reactifyObject, useCounter } from '@vueuse/core';\n\nimport useAudio from '@/factories/useAudio';\nimport en2mmNum from '@/lib/en2mmNum';\n\nconst isProd = process.env.NODE_ENV === 'production';\n\nconst audioUrls = {\n  clickSound: {\n    dev:\n      'https://githubraw.com/wai-lin/patee/gh-pages/audio/mixkit-mouse-click-close-1113.mp3',\n    prod:\n      'https://cdn.githubraw.com/wai-lin/patee/gh-pages/audio/mixkit-mouse-click-close-1113.mp3',\n  },\n  finishSound: {\n    dev:\n      'https://githubraw.com/wai-lin/patee/gh-pages/audio/mixkit-positive-interface-click-1112.mp3',\n    prod:\n      'https://cdn.githubraw.com/wai-lin/patee/gh-pages/audio/mixkit-positive-interface-click-1112.mp3',\n  },\n};\n\nexport default defineComponent({\n  name: 'PateeCounter',\n  props: {\n    totalCountLoop: { type: Number, default: 0 },\n    pateeLength: { type: Number, default: 108 },\n    size: { type: String, default: 'w-40 h-40' },\n  },\n  methods: {\n    en2mmNum,\n  },\n  setup(props, { emit }) {\n    // ? props\n    const { totalCountLoop, pateeLength } = reactifyObject(props);\n\n    // ? counters\n    const loopCount = useCounter();\n    const tallyCount = useCounter();\n\n    // ? sound\n    const clickSound = useAudio(\n      isProd ? audioUrls.clickSound.prod : audioUrls.clickSound.dev,\n    );\n    const finishClickSound = useAudio(\n      isProd ? audioUrls.finishSound.prod : audioUrls.finishSound.dev,\n    );\n\n    // * reset counter\n    watch(tallyCount.count, () => {\n      if (tallyCount.get() === pateeLength) {\n        tallyCount.set(0);\n        loopCount.inc();\n      }\n    });\n\n    // * when done\n    watch(loopCount.count, () => {\n      if (loopCount.get() === totalCountLoop) {\n        emit('done');\n      }\n    });\n\n    function clickHandler() {\n      if (loopCount.get() < totalCountLoop) {\n        clickSound.stop();\n        tallyCount.inc();\n        clickSound.play();\n        return;\n      }\n      finishClickSound.stop();\n      finishClickSound.play();\n    }\n\n    return { loopCount, tallyCount, clickHandler };\n  },\n});\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PateeCounter.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PateeCounter.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./PateeCounter.vue?vue&type=template&id=fdb1a9dc&\"\nimport script from \"./PateeCounter.vue?vue&type=script&lang=ts&\"\nexport * from \"./PateeCounter.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\nimport { computed, defineComponent } from '@vue/composition-api';\n\nimport BaseHeader from '@/components/base/Header.vue';\nimport BaseButton from '@/components/base/Button.vue';\nimport BaseIcon from '@/components/base/Icon.vue';\nimport PateeCounter from '@/components/PateeCounter.vue';\n\nimport usePateeProgressStorage from '@/factories/usePateeProgressStorage';\n\nimport en2mmNum from '@/lib/en2mmNum';\n\nimport data from '@/data';\n\nexport default defineComponent({\n  name: 'PagesPateeId',\n  components: {\n    BaseHeader,\n    BaseButton,\n    BaseIcon,\n    PateeCounter,\n  },\n  methods: { en2mmNum },\n  setup(_props, { root }) {\n    const currentPatee = root.$route.params.patee as keyof typeof data;\n    const [currentStep, currentDay] = root.$route.params.id.split('_');\n    const pateeData = data[currentPatee];\n\n    const pateeProgressStorage = usePateeProgressStorage(currentPatee);\n    const isFinishedAlready = computed(() =>\n      pateeProgressStorage.isInclude(\n        parseInt(currentStep),\n        parseInt(currentDay),\n      ),\n    );\n\n    const currentPateeStep = computed(() => {\n      const stepIdx = parseInt(currentStep) - 1;\n      return pateeData.steps[stepIdx].filter(\n        s => s.day.toString() === currentDay,\n      )[0];\n    });\n\n    const currentPateeMeaning = computed(() => {\n      return pateeData.words.filter(\n        w => w.title === currentPateeStep.value.title,\n      )[0];\n    });\n\n    // ? actions\n    function finishHandler() {\n      if (isFinishedAlready.value) return;\n      pateeProgressStorage.add([parseInt(currentStep), parseInt(currentDay)]);\n    }\n\n    return {\n      currentPatee,\n      isFinishedAlready,\n      currentPateeStep,\n      currentPateeMeaning,\n      finishHandler,\n    };\n  },\n});\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./[id].vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./[id].vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./[id].vue?vue&type=template&id=0613cbe9&\"\nimport script from \"./[id].vue?vue&type=script&lang=ts&\"\nexport * from \"./[id].vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}